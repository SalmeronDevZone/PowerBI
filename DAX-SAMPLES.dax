180 Casos DAX. Corregido y adunto a fuente original.

 -- TABLAS CALCULADAS --

01-Calendario = 
ADDCOLUMNS(
    CALENDAR(
        
        MIN(Sales[Date]),
        MAX(Sales[Date])),

        "Año", YEAR([Date]),
        "Mes", MONTH([Date]),
        "Trimestre", QUARTER([Date]),
        "Día", DAY([Date]),
        "Dia de la semana", WEEKDAY([Date]),
        "Nombre del mes", FORMAT([Date],"MMMM"),
        "Trimestre-letras", 
            SWITCH(
                QUARTER([Date]), 
                1, "Primero",
                2, "Segundo",
                3, "Tercero",
                4, "Cuarto",
                 "Fallo en trimestre")
)


02-TablaQuejasClientes = 
DATATABLE(
    "Country", STRING,
    "Complaints", INTEGER,
    "Year", INTEGER,
    "Complaint Category", STRING,
    "Satisfaction Level", INTEGER,
    {
        {"Canada", 32, 2012, "Product Defect", 3},
        {"Spain", 15, 2013, "Late Delivery", 4},
        {"Mexico", 28, 2014, "Customer Service", 2},
        {"Argentina", 18, 2015, "Billing Issue", 3},
        {"Colombia", 22, 2016, "Product Defect", 4},
        {"Chile", 30, 2017, "Late Delivery", 2},
        {"Peru", 24, 2018, "Customer Service", 3},
        {"Brazil", 40, 2019, "Billing Issue", 1},
        {"Uruguay", 12, 2020, "Product Defect", 4},
        {"Paraguay", 10, 2021, "Late Delivery", 5},
        {"Bolivia", 19, 2022, "Customer Service", 2},
        {"Ecuador", 27, 2023, "Billing Issue", 3},
        {"Venezuela", 33, 2024, "Product Defect", 2},
        {"Honduras", 14, 2025, "Late Delivery", 4},
        {"El Salvador", 25, 2026, "Customer Service", 3},
        {"Nicaragua", 20, 2027, "Billing Issue", 2},
        {"Costa Rica", 17, 2028, "Product Defect", 4},
        {"Panama", 22, 2029, "Late Delivery", 3},
        {"Guatemala", 16, 2030, "Customer Service", 4},
        {"Dominican Republic", 35, 2031, "Billing Issue", 2}
    }
)
 -- Si solo se introduce el año debe ser como integer, si se usa date time puede generarse error.


03-EmpleosEspañol =  -- Crear una tabla con valores unicos.
ADDCOLUMNS(
    DISTINCT(DimCustomer[SpanishOccupation]),
    "ID", RANKX(DISTINCT(DimCustomer[SpanishOccupation]), DimCustomer[SpanishOccupation], , ASC, DENSE)
)  
-- La formula original solo contempla el distinct, el resultado de la tabla es unicamente la ocupacion española.


04-Tabla de ResellerSales UNICOS = 
DISTINCT(FactResellerSales)
-- No tiene sentido pues no hay ninguna fila que se repita.


05-Total y subtotal por categoria = 
SUMMARIZE( Sales,
    ROLLUP(Sales[Country]),
    "Sum", SUM(Sales[Sales]),
    "Avg", AVERAGE(Sales[Sales])
    )


06-Tabla ventas numerosas paseo = 
SUMMARIZE(
    CALCULATETABLE(Sales,
        FILTER(Sales, Sales[Product] = "paseo")),
    ROLLUP(Sales[Country]),
    "Sum", SUM(Sales[Sales]),
    "Avg", AVERAGE(Sales[Sales])
)


07-DosSummarize = 
SUMMARIZE(
    SUMMARIZE(
        Sales,
        Sales[Country],
        '01-Calendario'[Año],
        Sales[Sales]),
    ROLLUP('01-Calendario'[Año]),
    "SUM", SUM(Sales[Sales]),
    "AVG", AVERAGE(Sales[Sales])
)

08-TablaCalculada = 
ADDCOLUMNS(
    SUMMARIZE(
        sales,
        Sales[Country],
        '01-Calendario'[Año]),
    "Sum", CALCULATE(SUM(Sales[Sales])),
    "Avg", CALCULATE(AVERAGE(Sales[Sales])
    )
)


09-Ventasaño2014 = 
CALCULATETABLE(
    Sales,
    '01-Calendario'[Año] = 2014)


10-Ventas2014-Francia = 
CALCULATETABLE(
    sales,
    '01-Calendario'[Año]=2014,
    Sales[Country]="france")    -- NOT KEYSENSITIVE


11-TablaCalculada =     -- Seleccionas la columna específica.
SELECTCOLUMNS(
    sales,
    Sales[Country],
    Sales[Product],
    Sales[Profit]
)

12-TablaCalculada = 
SELECTCOLUMNS(
    Sales,
    "Pais", Sales[Country],
    "Ventas", Sales[Sales],
    "Año", 
    LOOKUPVALUE
        ('01-Calendario'[Año], '01-Calendario'[Date], Sales[Date])
)


13-TablaCalculada = 
SUMMARIZECOLUMNS(
    Sales[Country],
    "Ventas totales", SUM(Sales[Sales]),
    "Media Ventas", AVERAGE(Sales[Sales]),
    "Max ventas", MAX(Sales[Sales]),        -- En el libro pone de manera ERRONEA MAXX(sales,sum(sales[columna Sales]))
    "Min ventas", MIN(Sales[Sales]),
    "Conteo Ventas", COUNTROWS(Sales)
)


14-TablaCalculada = 
SUMMARIZECOLUMNS(
    Sales[Country],  
    FILTER(
        Sales, 
        Sales[Segment] = "Government"  
    ),  
    "Ventas totales", SUM(Sales[Sales]),  
    "Media Ventas", AVERAGE(Sales[Sales]), 
    "Max ventas", MAX(Sales[Sales]), 
    "Min ventas", MIN(Sales[Sales]),  
    "Conteo Ventas", COUNTROWS(Sales) 
)


15-TablaCalculada = -- 2 filtros esta vez.
SUMMARIZECOLUMNS(
    Sales[Country],  
    FILTER(
        Sales, 
        Sales[Segment] = "Government"),
    FILTER(
        '01-Calendario',
        '01-Calendario'[Año]=2014),  
    "Ventas totales", SUM(Sales[Sales]),  
    "Media Ventas", AVERAGE(Sales[Sales]), 
    "Max ventas", MAX(Sales[Sales]), 
    "Min ventas", MIN(Sales[Sales]),
    "Conteo Ventas", COUNTROWS(Sales)
)



16-TablaCalculada = 
SELECTCOLUMNS(
    Salesman,
    "Name", Salesman[Name],  
    "Gender", Salesman[Gender], 
    "Media de Ventas", AVERAGEX(
        RELATEDTABLE(Sales),  
        Sales[SalesAmount]  
    )
)


17-TablaAnteriorConFiltro = 
SELECTCOLUMNS(
    FILTER(
        Salesman,
        Salesman[Gender]="M"),
    "Name", Salesman[Name],  
    "Gender", Salesman[Gender], 
    "Media de Ventas", AVERAGEX(
        RELATEDTABLE(Sales),  
        Sales[SalesAmount]  
    )
)


18-TablaCalculada = 
FILTER(
    ADDCOLUMNS(
        SUMMARIZE(
            Sales,
            'Sales'[Country],
            '01-Calendario'[Año]),
            "Suma", SUM(Sales[Sales]),
            "Media", AVERAGE(Sales[Sales])
        ),
        [Suma] > 500000 && Sales[Country] ="germany"        -- La funcion AND() puede sustituir &&. OR() Se puede poner como ||
    )


20-TablaValues = 
VALUES(Sales)


21-TablaValuesCountry =
VALUES(Sales[Country])


-- COLUMNAS CALCULADAS -- 

22-ColumnaCiudades =
RELATED(Country[Province])


23-ColumnaCondicional = 
IF( Sales[Country] = "Francia",
    RELATED(Country[])
)


24-ColumnaCondicionalDoble =
    IF(
        AND(
        Sales[Country] = "Grecia" , Sales[Date] = 2016
    ) , RELATED(Country[Province]),
    BLANK()
    )


25-ImpuestosPorVentas =
LOOKUPVALUE(
    'Country Tax'[TAX],
    'Country Tax'[Country],
    'Country2'[Country]
)


26-ImpuestosporVentasAlemania = 
IF(
    'Country2'[Country] = "Germany",
    LOOKUPVALUE(
        'Country Tax'[TAX],
        'Country Tax'[Country],
        'Country2'[Country]
    ), 
    BLANK()
)


27-VentasAlemania-Canada = 
IF(
    Country2[Country] IN {"Germany" , "Canada"}
    LOOKUPVALUE(
        "CountryTax[Tax]",
        "CountryTax[Country]",
        "Country2[Country]"
    ),
    BLANK()
)


28-CashFlowBajo = 
CALCULATE(
    SUM(CashFlow[Movement],
    FILTER(
        Cashflow,
        CashFlow[Reg] <= EARLIER(
            CashFlow[Reg]
        )
    )
    )
)


29-CashFlowTime = 
CALCULATE(
    SUM(CashFlow[Movement]),
    FILTER(
        CashFlow,
        CashFlow[DATE] <= EARLIER(
            CashFlow[DATE]
        )
    )
)



    -- MEDIDAS --


30-MedidaPorTiempo =
CALCULATE(
    SUM(Sales[Sales]),
    FILTER(
        ALL(Sales),
        RELATED(Calendario[Año]) = 2014
    )
)


31-SumaPorTiempo2 =
CALCULATE(
    SUM(Sales[Sales]),
    FILTER(
        ALL(Sales),
        Sales[Date] <= MAX(Sales[Date])
    )
)


32-ConteoPorVentasyPais = 
CALCULATE(
    COUNT(Sales[Sales]),
    Sales[Country] = "Mexico"
)


33-ConteoVentasSinFiltros = 
CALCULATE(
    COUNT(Sales[Sales]),
    FILTER(
        ALL(Sales),
        Sales[Country] = "Canada")
)



34-ConteoValores = 
CALCULATE(
    COUNT(Sales[Sales]),
    FILTER(
        Sales,
        Sales[Country] = "Canada" && Sales[Sales] > 1000 -- AND() 
    )   
)


35-PaisesDistintos = 
DISTINCTCOUNT(Sales[Country])


36-PaisesDiferentesSinFiltros = 
CALCULATE(
    DISTINCTCOUNT(
        Sales[Country]),
        ALL(Sales)
)


37-ContarProductosVendidos = 
COUNTX(
    FILTER(
        ALL(Sales),
        RELATED(Product[Product]) = Sales[Product]
    ),
    Sales[Sales]
)


38-NumeroProductosVendidos = 
CALCULATE(
    DISTINCTCOUNTNOBLANK(Sales[Product]),
    CROSSFILTER(
        Product[Product],
        Sales[Product],
        Both
    )
)


39-ValorUnicoRelacionandoTablasSinRelacion = 
CALCULATE(
    DISTINCTCOUNTNOBLANK(Sales[Product]),
    TREATAS(
        Country3,
        CountryTax[Country]
    )
)


40-ProductosPorCategoria = 
SUMMARIZE(
    Sales,
    Sales[Product],
    "Numero de Ventas", COUNT(
        Sales[Product]
    )
)


41-ContaValores = 
SUMMARIZE(
    Sales,
    Sales[Product],
    "Numero de Ventas", DISTINCTCOUNT(  -- Es el ejemplo del libro pero no tiene logica.
        Sales[Product]
    )
)


42-NumeroVentasAlemania = 
CALCULATE(
    COUNTROWS(Sales),
    Sales[Country] = "Germany"
)


43-ContarSinEfectosdeFiltro = 
CALCULATE(
    COUNTROWS(Sales),
    FILTER(
        ALL(Sales),
        Sales[Country] = "Germany"
    )
)


44-Subtotal por categoria = 
SUMMARIZECOLUMNS(
    ROLLUPADDISSUBTOTAL(
        Sales[Sector], 
        "Subtotal",
        Sales
    ),
    Salesman[Salesman],
    "Ventas", SUM(Sales[Sales])
)







44-Conteo por categoria = 
    CALCULATE(
        COUNTROWS(Sales),
        FILTER(
            ALLNOBLANKROW(Sales),
            Sales[Country] = "Germany"

        )
    )


45-Conteo valores no blank = 
    CALCULATE(
        COUNT(Sales[Discount]),
        NOT(ISBLANK(Sales[Discount]))
    )


46-Conteo valores blancos = 
    COUNTBLANK(Sales[Discount])


47-Contar num de veces cada valor repetido = 
    COUNTROWS(
        FILTER(
            Sales,
            Sales[Product] = EARLIER(Sales[Product])
        )
    )


48-Numero de veces que se repite dentro de una categoria = 
    IF(
        Sales[Product] = "Tools",
        COUNTROWS(
            FILTER(
                Sales,
                Sales[Product] = EARLIER(Sales[Product])
            )
        ),
        BLANK()
    )


49-Total ventas = 
    SUM(Sales[Sales])
// Afectada por el contexto de filtro.


50-Total ventas sin filtros que afecten = 
CALCULATE(
    SUM(Sales[Sales]),
    ALL(Sales)
)


51-TotalPorCategoria = 
//Ventas por sextoy y pais
var gSales = SUM(Sales{Sales})

var gTaxes = SUM(Sales[Sales]*Sales[Tax])

RETURN
    SUMMARIZE(
        Sales,
        Sales[Country],
        Sales[Tax],
        Sales[Sector],
        "Ventas Brutas", gSales,
        "Impuestos Netos", gTaxes,
        "Ventas Netas", gSales - gTaxes
    )


52-Total por Categorias(2) = 
    CALCULATETABLE(
        SUMMARIZE(
            Sales,
            CountryTAX[CountryTAX],
            Sector[Sector],
            "Ventas totales", SUM(Sales[Sales])
                ), CountryTAX = "France"
    )


53-Total por categoría(3) =
    SUMMARIZE(
        CALCULATETABLE(
            Sales,
            FILTER(
                Sector,
                Sector[Sector] = "Midmarket"
            ),
            FILTER(
                CountryTAX,
                CountryTAX[Country] = "France"
            )
        ),
        Category[Category],
        "Ventas totales", SUM(Sales[Sales]),
        "Promedio de Ventas", AVERAGEX(
            Sales, SUM(Sales[Sales])
        ),
        "Maximo en ventas", MAXX (Sales, SUM(Sales[Sales])),
        "Minimo en ventas", MINX (Sales, SUM(Sales[Sales])),
        "Conteo de Ventas", COUNTROWS(Sales)
    )



55-Calculo subtotal por categoria(2) = 
    SUMMARIZE(
        Sales,
        Sales[Salesman],
        ROLLUPGROUP(Sector[Sector]),
        "Sales", SUM(Sales[Sales])
    )

56-Agrupar resultado por N categorías =
    GROUPBY(
    Sales,
    Sales[Country],  -- En el libro salen diferentes tablas. Produce  errores.
    Sales[Salesman],  
    "Total Sales",
    SUMX(
        CURRENTGROUP(),
        SUM(Sales[Sales])
    )
)


57-Comparar cadenas de texto misma tabla = 
    EXACT(
        Sales[Gross Sales],
        Sales[Sales]
    )

58-Comparar dos cadenas distinta tabla = 
    EXACT(
        Country2[Country],
        RELATED(
            CountryTax[Country]
        )
    )


59-Valores no coincidentes en tablas relacionadas = 

    var VentaPaises = VALUES(
        Sales[Country]
    )

    var TablaPaises = VALUES(
        Country_2[Country]
    )

    RETURN EXCEPT(
        TablaPaises,
        VentaPaises
    )



60-Valores no coincidentes tablas NO relacionadas =

    var VentaPaises = VALUES(Sales[Country])

    var TablaPaises = VALUES(Country_2[Country])

    RETURN CALCULATETABLE(
        EXCEPT(
            TablaPaises,
            VentaPaises
        ),
        TREATAS(
            Country_3,
            'Country Tax'[Country]
        )
    )


61-Valores coincidentes tablas NO relacionadas = 
    INTERSECT(
        VALUES(
            Country_3[Country]
        ),
        VALUES(
            Country_2[Country]
        )
    )


62-Redondeo de número hacia arriba, dos decimales = 
    ROUNDUP(Sales[Profit],2)


63-Redondeo hacia abajo =
    ROUNDDOWN(Sales[Profit],2)


64-Redondeo = 
    ROUND(Sales[Profit],2)


